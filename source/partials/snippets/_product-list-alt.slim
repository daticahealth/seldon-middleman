ruby:
  if defined?(current_page.data.collectionName) # this is already a part of static pages/sections
    track_category = current_page.data.collectionName
  else
      track_category = "nav"
  end
  if defined?(style) && style == "light"
    theme = "light" # light text on dark bg
    # header_class = " main-header--white"
    element_color = "white"
  else
    theme = "dark" # dark text on light bg
    # header_class = nil
    element_color = "black"
  end
  if defined?(size) && size == "large"
    icon_size = "large"
  else
    icon_size = "medium"
  end
  # if defined?(cards) && cards == true
  # end
  # if defined?(desc) && desc == true
  # else
  # end
  cat_compliance = '<h3 class="text-light text-center group headline-4"><span class="text-bold headline-3">Cloud Compliance</span><br>with patient data in the cloud</h3>'
  cat_integration = '<h3 class="text-light text-center group headline-4"><span class="text-bold headline-3">Integrate</span><br>with patient data from anywhere</h3>'
  if defined?(category_links) && category_links == true
    category_links = true
  else
    category_links = false
  end
  # sorted_posts = data.site.blog.to_a.sort_by{ |id, post| post['pub_date'] }.reverse!
  # sorted_guides = data.site.guides.to_a.sort_by{ |id, guides| guides['_meta']['created_at'] }.reverse!

/ = partial "assets/icons/inlined/datica-branding-logos-symbol.svg"
scss:
  .product-icon {
    transition: all 0.3s cubic-bezier(0.165, 0.84, 0.44, 1);
  }
  .product-card {
    &:hover {
      color: white;
      .product-icon {
        transform: scale3D(1.06, 1.06, 1.06);
      }
    }
  }
// bg image: ?fm=jpg&w=600&h=200&fit=crop

- nav_collection = data.site.collections.to_a.select { |id, entry | (id == master_nav_id) }
- nav_collection.each do | id, nav_section |
  /p.lead.hide-for-medium = (nav_section.has_key?("subhead") ? nav_section.subhead : nil)
  - nav_section["related_entries"].each do | nav_item |
    - if nav_item.section == "Compliance" || nav_item.section == "Integration" ? is_product = true : is_product = false
    - unless nav_item.has_key?("show_in_top_nav") && nav_item.show_in_top_nav == false
      - if nav_item.has_key?("child_data") && is_product == true
        aside.column.group data-theme=theme class=(is_product == true ? nil : "shrink-for-large bg-#{theme}")
          - if nav_item.section == 'Compliance' ? category = cat_compliance : category = cat_integration
          = category
          .group--sm data-theme="light"
            - nav_item.child_data.each do | child |
              - if child.has_key?("bg") ? bg = "#{child.bg}" : nil
              a.product-card.bg-gray-2.group.pad--lg.card-hover.card.lozad.container-image-fill href=child.url title="Explore #{child.title}" data-track="true" data-track-category="nav" data-track-id="page-#{child.title_short.parameterize}" class="product-#{child.title_short.parameterize}" data-background-image=bg
                - if is_product == true && child.has_key?("icon")
                  .media-object.nav__product
                    .media-object-section
                      svg id="product-#{child.icon}" class="product-icon icon-size--#{icon_size}"
                        use.symbol-icon xlink:href="##{child.icon}" href="##{child.icon}"
                      /= inline_svg(child.icon, class: "icon-size--medium")
                    .media-object-section.media-object--info.main-section.align-self-middle
                      h4.headline-5.nomargin = child.title
                      p.text-regular.text-small = child.desc
                - else
                  a href=child.url title="Explore #{child.title}" data-track="true" data-track-category="nav" data-track-id="page-#{child.url.parameterize}" = child.title
          - if category_links == true && nav_item.has_key?('section_link_label')
            = partial "partials/snippets/button", :locals => { :label => nav_item.section_link_label, :url => nav_item.section_link_uri, :button_classes => "button hollow hollow-inverted", :item_id => "get-#{nav_item.title_short.parameterize}", :data_track_group => nav_item.title_short.parameterize }
