@import '../settings';

.button {
    // global button attributes
    border: 0px; // For some reason there's a 1px solid transparent border being added to the button, I can't find where it originates - RR
    // @include easing($timing-default);
    line-height: 1.15;
    @include fx-hover-nudge();
    font: {
        weight: $font-weight-mid; // chose the 500 weight for best legibility.
        family: $font_sans !important; // overrides normalize.css
    }
    // &:focus{
    //     background-color: inherit;
    //     color: inherit;
    //     @include transform(translate(rem-calc(0px), rem-calc(0px)));
    // }
    // button style variations must change as little as possible. Base padding, sizing, etc. is default .button
    &--dark {
        @include gradient(to bottom, $gray-3 0%, $gray-1 100%);
        color: $color_white;
        &:active, &:focus {
            // color: $color_product;
            background-color: $black;
            // @include gradient(to bottom, $gray-1 0%, $gray-2 100%);
        }
    }
    &--light, &--tertiary { // use these on dark or busy backgrounds
        @include gradient(to bottom, white 0%, $gray-12 100%);
        // @include shadow-anarchy(inset 0 -1px 2px 0 #B3C8D6);
        // background-color: $gray-12;
        color: darken($color_product, 20%) !important; // not sure what .container rule is overriding this, it's lower in the OOO
        &:hover, &:active, &:focus {
            color: black !important;
            background-color: white;
            // @include gradient(to bottom, $gray-12 0%, $gray-11 100%);
        }
    }
    &--transparent{
        font-size: rem-calc(12px);
        @include opacity(0.5);
        &-dark{
            background-color: rgba(0,0,0,0.1);
            color: $color_talk-alt;
            &:hover &:active, &:focus {
                background-color: $color_deep;
            }
        }
    }
    // &--notification {
    //     background: $color_white;
    //     color: $color_talk-alt;
    //     padding: 10px;
    //     font-size: $global-font-size;
    //     font-weight: $font-weight-regular;
    //     text-align: left;
    //     @include shadow-anarchy(0px 3px 6px $color_shadow);
    //     @include border-radius(8px);
    //     &:hover &:active, &:focus {
    //         background-color: $color_white;
    //         color: initial;
    //         @include shadow-anarchy(0px 4px 10px darken($color_shadow, 10%));
    //     }
    // }
    &--inline {
        margin-bottom: 0;
    }
    &--inverted {
        // used in close buttons or plain inverted buttons
        color: white;
        &:hover &:active, &:focus {
            color: $color_prime-bright;//lighten($color_prime-bright, 10%);
        }
    }
    // &--cta {
    //     font-weight: $font-weight-bold;
    // }
    &.hollow {
        border: 1.5px solid $color_prime;
        color: $color_prime-dark;
    }
    &.hollow-inverted {
        border: 1px solid $white;
        color: white;
        background-color: transparent;
        &:hover, &:focus {
            color: lighten($color_prime-bright, 10%);
            border: 1px solid lighten($color_prime-bright, 10%);
        }
    }
    &.hollow-invisible {
        border: 1px solid transparent;
        background-color: transparent;
        &:hover {
            border: 1px solid inherit;
        }
    }
    // &--neat{
    //     @include gradient (#59BDFF 0%, #548CFE 100%);
    //     box-shadow: inset 0 -1px 2px 0 rgba(20,30,47,0.30);
    //     font-weight: $font-weight-bold;
    //     color: $color_white;
    //     &:hover, &:active, &:focus {color: $color_light-alt;}
    // }
    &.disabled {
        // background-color: $gray-4;
        opacity: 0.4;
    }
    &.small {
        border-radius: $global-radius * 0.75;
    }
    &--big-ass { // it's really big
        padding: 1.2rem;
        font-size: 1.1rem;
        width: 100%;
        max-height: 100%;
    }
    &.round { // this is normally in Foundation, seems to be missing
        border-radius: 1000px;
    }
    &[data-expand-on-small='true'] {
        @include breakpoint(small only) {
            @include button-expand(true);
        }
    }
    &.card-button-override {
        @include button-expand(true);
        @include breakpoint(medium) {
            @include button-expand(false);
        }
    }
    &--primary, &.primary, &.success {
        $c1: adjust-color($color_prime, $hue: -5%, $lightness: -5%);
        $c2: adjust-color($color_prime, $hue: 5%, $lightness: 3%);
        @include gradient(70deg, $c1 0%, $c2 100%);
        color: white;
        &:hover, &:active, &:focus {
            color: white;
            // @include gradient(55deg, darken($color_prime, 5%) 0%, darken($color_prime, 10%) 100%);
        }
    }
    // &.success { // $color_green is a bit dark
    //     color: white;
    //     &:hover, &:active, &:focus {
    //         background-color: scale-color($success_color, $lightness: 8%);
    //         color: white;
    //     }
    // }
    &.success-light { // $color_green is a bit dark
        color: black;
        background-color: $color_green-glow;
        &:hover, &:active, &:focus {
            background-color: scale-color($color_green-glow, $lightness: -10%);
            // color: white;
        }
    }
    // &.icon-inline { // target svg icon

    // }
    &.nudge-left {
        @include fx-hover-nudge-left;
    }
    &.no-nudge {
        @include no-nudge;
    }
}
.button--hover-compliance {
    // font-weight: $font-weight-bold;
    &:hover {
        @include shadow-anarchy(0 0 0 5px #2e8dff)
    }
    // @include grad-bright;
}
.button--hover-integration {
    // font-weight: $font-weight-bold;
    &:hover {
        @include shadow-anarchy(0 0 0 5px #e85c86)
    }
}
.button-cluster { // pair with zf .menu for flexbox button grouping
    // when stacking vertically, space between. 
    // Several behaviors on stacking... are stacking up here
    & > .button {
        margin-right:  0;
        margin-bottom: $buttongroup-margin;
        // &:not([expanded]) {
            
        // }
        @include breakpoint(medium up) { // see data-expand above ^
            margin-right: $buttongroup-margin;
        }
        // &:last-child {
        //     margin-bottom: 0;
        // }
    }
}
.button-card--container {
    flex-direction: column;
    &[data-theme="light"] {
        .button-card--item {
            &:hover {
                background-color: black;
            }
        }
        a {
            @include link-colors (white, white, false);
        }
    }
    &[data-theme="dark"] {
        .button-card--item {
            &:hover {
                background-color: white;
            }
        }
        a {
            @include link-colors (black, $color_prime, false);
        }
    }
}
.button-card--item {
    a {
        padding-top:    1rem;
        padding-bottom: 1rem;
    }
    margin-left: -1rem; // pulls list left to line up/use space better
    border-radius: 8px;
    transition: background-color 100ms linear;
}
